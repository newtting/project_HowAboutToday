plugins {
	id 'org.springframework.boot' version '2.7.3'
	id 'io.spring.dependency-management' version '1.0.13.RELEASE'
	id 'java'
}

group = 'com.phoenix'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa' //JPA
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client' //Spring OAuth2 Client
	implementation 'org.springframework.boot:spring-boot-starter-security' //Spring Security
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5' //Thymeleaf Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf' //Thymeleaf
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect' //Thymeleaf Layout
	implementation 'org.springframework.boot:spring-boot-starter-web' //Web
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.7' //p6spy 쿼리파라미터 보여주는 라이브러리
	implementation 'org.springframework.boot:spring-boot-starter-validation'//유효성 검사에 사용
	compileOnly 'org.projectlombok:lombok' //Lombok
	annotationProcessor 'org.projectlombok:lombok' //Lombok
	developmentOnly 'org.springframework.boot:spring-boot-devtools' //Devtools
	runtimeOnly 'mysql:mysql-connector-java' //mySQL
	testImplementation 'org.springframework.boot:spring-boot-starter-test' //SpringBoot Starter Test
	testImplementation 'org.springframework.security:spring-security-test' //Spring Security Test
	implementation 'org.springframework.boot:spring-boot-starter-validation' // validation
	implementation 'org.springframework.boot:spring-boot-starter-webflux'	//서버에서 다른 서버로 api요청을 보내기 위한 의존성
	testImplementation 'io.projectreactor:reactor-test'	//webflux테스터
	implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
	implementation 'com.querydsl:querydsl-jpa' // QueryDSL
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa" // QueryDSL
	annotationProcessor "jakarta.persistence:jakarta.persistence-api" // QueryDSL
	annotationProcessor "jakarta.annotation:jakarta.annotation-api" // QueryDSL
	implementation 'org.springframework.boot:spring-boot-starter-mail' // mail
	implementation 'org.apache.commons:commons-email:1.5' // commons-email

//	오라클로 테스트 하기 위한 dependencies
//	implementation 'com.oracle.database.jdbc:ojdbc8'
//	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
}

clean {
	delete file('src/main/generated')
}

tasks.named('test') {
	useJUnitPlatform()
}

bootJar{
	destinationDirectory = file("target/howabouttoday.main.jar")
	archivesBaseName = 'howabouttoday'
	archiveFileName = 'howabouttoday.main.jar'
	archiveVersion = "0.0.1"
}

tasks.withType<Jar>() {

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest {
        attributes["Main-Class"] = "MainKt"
    }

    configurations["compileClasspath"].forEach { file: File ->
        from(zipTree(file.absoluteFile))
    }
}



test {
	exclude '**/*'
}